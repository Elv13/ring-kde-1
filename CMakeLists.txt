CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)

IF(POLICY CMP0048)
   CMAKE_POLICY(SET CMP0048 NEW)
ENDIF(POLICY CMP0048)

IF(POLICY CMP0017)
   CMAKE_POLICY(SET CMP0017 NEW)
ENDIF(POLICY CMP0017)

SET(PROJECT_VERSION "1.4.1")
PROJECT(ring-kde)

SET(QT_MIN_VERSION  "5.2.0")
SET(KF5_DEP_VERSION "5.6.0")

SET(LOCAL_CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/" )
SET(CMAKE_MODULE_PATH       "${CMAKE_MODULE_PATH} ${LOCAL_CMAKE_MODULE_PATH}" )

FIND_PACKAGE(ECM 1.1.0 REQUIRED NO_MODULE)
SET (CMAKE_MODULE_PATH ${ECM_MODULE_PATH})

INCLUDE(ECMInstallIcons)
INCLUDE(ECMOptionalAddSubdirectory)

INCLUDE(KDEInstallDirs)
INCLUDE(KDECMakeSettings)
INCLUDE(KDECompilerSettings)


# Block known broken C++11 compilers
IF (CMAKE_COMPILER_IS_GNUCC)
   EXECUTE_PROCESS(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
   IF (GCC_VERSION VERSION_GREATER 4.8 OR GCC_VERSION VERSION_EQUAL 4.8)
      MESSAGE(STATUS "Found GCC version >= 4.8: " ${GCC_VERSION})
   ELSE()
      MESSAGE(FATAL_ERROR "Your version of GCC is too old, please install GCC 4.8 or later")
   ENDIF()
ENDIF()

SET(QT_USE_QT*)


FIND_PACKAGE(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED Core Widgets Gui Svg OpenGL)

FIND_PACKAGE(KF5 "${KF5_DEP_VERSION}" REQUIRED COMPONENTS
  Config
  GuiAddons
  DBusAddons
  I18n
  Init
  WindowSystem
  XmlGui
  Notifications
  IconThemes
  KIO
  Completion
)

# SET(AKONADI_MIN_VERSION 1.0)
# FIND_PACKAGE(Akonadi QUIET NO_MODULE ${AKONADI_MIN_VERSION})

# INCLUDE ( KDE4Defaults )

MESSAGE("cmake install prefix is : ${CMAKE_INSTALL_PREFIX}")

INCLUDE_DIRECTORIES (SYSTEM ${Qt5Widgets_LIBRARIES}} ${Qt5Core_LIBRARIES} ${CMAKE_CURRENT_BINARY_DIR})

INCLUDE( ${CMAKE_ROOT}/Modules/CheckIncludeFiles.cmake  )
# INCLUDE( ${QT_USE_FILE}   )
ADD_SUBDIRECTORY( data )
ADD_SUBDIRECTORY( src  )
ADD_SUBDIRECTORY( doc  )
ADD_SUBDIRECTORY( man  )

IF(${ENABLE_TEST} MATCHES true)
   ADD_SUBDIRECTORY( src/test)
ENDIF()

IF(EXISTS "po" AND IS_DIRECTORY "po")
   FIND_PACKAGE ( Gettext REQUIRED )
   ADD_SUBDIRECTORY( po      )
ENDIF()

SET(ARCHIVE_NAME ${CMAKE_PROJECT_NAME}-${PROJECT_VERSION})

ADD_CUSTOM_TARGET(dist
      COMMAND git archive --prefix=${ARCHIVE_NAME}/ HEAD
      | gzip > ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar.gz
      WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
