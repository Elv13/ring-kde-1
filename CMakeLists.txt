CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(ring-kde)
SET(PROJECT_VERSION "1.4.1")

SET(LOCAL_CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/" )
SET(CMAKE_MODULE_PATH       "${LOCAL_CMAKE_MODULE_PATH}" )

SET(QT_USE_QT*)

IF(POLICY CMP0017)
   CMAKE_POLICY(SET CMP0017 NEW)
ENDIF(POLICY CMP0017)


# --- custom targets: ---
IF(NOT (${ENABLE_QT5} MATCHES true))
   FIND_PACKAGE ( KdepimLibs REQUIRED                                                            )
   FIND_PACKAGE ( KDE4       REQUIRED                                                            )
   FIND_PACKAGE ( Qt4        REQUIRED QtCore QtGui QtXml QtDBus QtTest QtSVG QtOpenGl QT_USE_QT* )
ENDIF(NOT (${ENABLE_QT5} MATCHES true))

# GCC 4.5 is too old for C++11
IF (CMAKE_COMPILER_IS_GNUCC)
   EXECUTE_PROCESS(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
   IF (GCC_VERSION VERSION_GREATER 4.8 OR GCC_VERSION VERSION_EQUAL 4.8)
      MESSAGE(STATUS "Found GCC version >= 4.8: " ${GCC_VERSION})
   ELSE()
      MESSAGE(FATAL_ERROR "Your version of GCC is too old, please install GCC 4.8 or later")
   ENDIF()
ENDIF()

IF(${ENABLE_QT5} MATCHES true)
   ADD_SUBDIRECTORY( src/lib )
ELSE()
   SET(AKONADI_MIN_VERSION 1.0)
   FIND_PACKAGE(Akonadi QUIET NO_MODULE ${AKONADI_MIN_VERSION})

   INCLUDE ( KDE4Defaults )

   MESSAGE("cmake install prefix is : ${CMAKE_INSTALL_PREFIX}")

   INCLUDE_DIRECTORIES (${KDE4_INCLUDES} ${QT_INCLUDES} ${KDEPIMLIBS_INCLUDE_DIRS} ${CMAKE_CURRENT_BINARY_DIR})

   INCLUDE( ${CMAKE_ROOT}/Modules/CheckIncludeFiles.cmake  )
   INCLUDE( ${QT_USE_FILE}   )
   ADD_SUBDIRECTORY( data )
   ADD_SUBDIRECTORY( src  )
   ADD_SUBDIRECTORY( doc  )
   ADD_SUBDIRECTORY( man  )
ENDIF(${ENABLE_QT5} MATCHES true)

IF(${ENABLE_TEST} MATCHES true)
   ADD_SUBDIRECTORY( src/test)
ENDIF()

IF(EXISTS "po" AND IS_DIRECTORY "po")
   FIND_PACKAGE ( Gettext REQUIRED )
   ADD_SUBDIRECTORY( po      )
ENDIF()

SET(ARCHIVE_NAME ${CMAKE_PROJECT_NAME}-${PROJECT_VERSION})

ADD_CUSTOM_TARGET(dist
      COMMAND git archive --prefix=${ARCHIVE_NAME}/ HEAD
      | gzip > ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar.gz
      WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
