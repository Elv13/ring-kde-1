/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c InstanceInterface -p instance_interface_p.h:instance_interface.cpp -i metatypes.h ../sflphone-common/src/dbus/instance-introspec.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef INSTANCE_INTERFACE_P_H_1241041454
#define INSTANCE_INTERFACE_P_H_1241041454

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "metatypes.h"

/*
 * Proxy class for interface org.sflphone.SFLphone.Instance
 */
class InstanceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.sflphone.SFLphone.Instance"; }

public:
    InstanceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~InstanceInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Register(int pid, const QString &name)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(pid) << qVariantFromValue(name);
        return asyncCallWithArgumentList(QLatin1String("Register"), argumentList);
    }

    inline QDBusPendingReply<> Unregister(int pid)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(pid);
        return asyncCallWithArgumentList(QLatin1String("Unregister"), argumentList);
    }

    inline QDBusPendingReply<int> getRegistrationCount()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getRegistrationCount"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace sflphone {
    namespace SFLphone {
      typedef ::InstanceInterface Instance;
    }
  }
}
#endif
