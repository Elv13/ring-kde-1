/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c ConfigurationManagerInterface -p configurationmanager_interface_p.h:configurationmanager_interface.cpp -i metatypes.h configurationmanager-introspec.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CONFIGURATIONMANAGER_INTERFACE_P_H_1241106716
#define CONFIGURATIONMANAGER_INTERFACE_P_H_1241106716

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "metatypes.h"

/*
 * Proxy class for interface org.sflphone.SFLphone.ConfigurationManager
 */
class ConfigurationManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.sflphone.SFLphone.ConfigurationManager"; }

public:
    ConfigurationManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ConfigurationManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> addAccount(MapStringString details)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(details);
        return asyncCallWithArgumentList(QLatin1String("addAccount"), argumentList);
    }

    inline QDBusPendingReply<> enableStun()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("enableStun"), argumentList);
    }

    inline QDBusPendingReply<MapStringString> getAccountDetails(const QString &accountID)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(accountID);
        return asyncCallWithArgumentList(QLatin1String("getAccountDetails"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getAccountList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAccountList"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getActiveCodecList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getActiveCodecList"), argumentList);
    }

    inline QDBusPendingReply<MapStringInt> getAddressbookSettings()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAddressbookSettings"), argumentList);
    }

    inline QDBusPendingReply<int> getAudioDeviceIndex(const QString &name)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(name);
        return asyncCallWithArgumentList(QLatin1String("getAudioDeviceIndex"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getAudioInputDeviceList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAudioInputDeviceList"), argumentList);
    }

    inline QDBusPendingReply<int> getAudioManager()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAudioManager"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getAudioOutputDeviceList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAudioOutputDeviceList"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getCodecDetails(int payload)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(payload);
        return asyncCallWithArgumentList(QLatin1String("getCodecDetails"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getCodecList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getCodecList"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getCurrentAudioDevicesIndex()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getCurrentAudioDevicesIndex"), argumentList);
    }

    inline QDBusPendingReply<QString> getCurrentAudioOutputPlugin()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getCurrentAudioOutputPlugin"), argumentList);
    }

    inline QDBusPendingReply<int> getDialpad()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getDialpad"), argumentList);
    }

    inline QDBusPendingReply<MapStringString> getHookSettings()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getHookSettings"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getInputAudioPluginList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getInputAudioPluginList"), argumentList);
    }

    inline QDBusPendingReply<int> getMailNotify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getMailNotify"), argumentList);
    }

    inline QDBusPendingReply<int> getMaxCalls()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getMaxCalls"), argumentList);
    }

    inline QDBusPendingReply<int> getNotify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getNotify"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getOutputAudioPluginList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getOutputAudioPluginList"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getPlaybackDeviceList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getPlaybackDeviceList"), argumentList);
    }

    inline QDBusPendingReply<int> getPulseAppVolumeControl()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getPulseAppVolumeControl"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getRecordDeviceList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getRecordDeviceList"), argumentList);
    }

    inline QDBusPendingReply<QString> getRecordPath()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getRecordPath"), argumentList);
    }

    inline QDBusPendingReply<QString> getRingtoneChoice()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getRingtoneChoice"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getRingtoneList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getRingtoneList"), argumentList);
    }

    inline QDBusPendingReply<int> getSearchbar()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getSearchbar"), argumentList);
    }

    inline QDBusPendingReply<int> getSipPort()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getSipPort"), argumentList);
    }

    inline QDBusPendingReply<QString> getStunServer()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getStunServer"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getToneLocaleList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getToneLocaleList"), argumentList);
    }

    inline QDBusPendingReply<QString> getVersion()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getVersion"), argumentList);
    }

    inline QDBusPendingReply<int> getVolumeControls()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getVolumeControls"), argumentList);
    }

    inline QDBusPendingReply<int> isIax2Enabled()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("isIax2Enabled"), argumentList);
    }

    inline QDBusPendingReply<int> isRingtoneEnabled()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("isRingtoneEnabled"), argumentList);
    }

    inline QDBusPendingReply<int> isStartHidden()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("isStartHidden"), argumentList);
    }

    inline QDBusPendingReply<int> isStunEnabled()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("isStunEnabled"), argumentList);
    }

    inline QDBusPendingReply<int> popupMode()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("popupMode"), argumentList);
    }

    inline QDBusPendingReply<> removeAccount(const QString &accoundID)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(accoundID);
        return asyncCallWithArgumentList(QLatin1String("removeAccount"), argumentList);
    }

    inline QDBusPendingReply<> ringtoneEnabled()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ringtoneEnabled"), argumentList);
    }

    inline QDBusPendingReply<> sendRegister(const QString &accountID, int expire)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(accountID) << qVariantFromValue(expire);
        return asyncCallWithArgumentList(QLatin1String("sendRegister"), argumentList);
    }

    inline QDBusPendingReply<> setAccountDetails(const QString &accountID, MapStringString details)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(accountID) << qVariantFromValue(details);
        return asyncCallWithArgumentList(QLatin1String("setAccountDetails"), argumentList);
    }

    inline QDBusPendingReply<> setActiveCodecList(const QStringList &list)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(list);
        return asyncCallWithArgumentList(QLatin1String("setActiveCodecList"), argumentList);
    }

    inline QDBusPendingReply<> setAddressbookSettings(MapStringInt settings)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(settings);
        return asyncCallWithArgumentList(QLatin1String("setAddressbookSettings"), argumentList);
    }

    inline QDBusPendingReply<> setAudioInputDevice(int index)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(index);
        return asyncCallWithArgumentList(QLatin1String("setAudioInputDevice"), argumentList);
    }

    inline QDBusPendingReply<> setAudioManager(int api)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(api);
        return asyncCallWithArgumentList(QLatin1String("setAudioManager"), argumentList);
    }

    inline QDBusPendingReply<> setAudioOutputDevice(int index)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(index);
        return asyncCallWithArgumentList(QLatin1String("setAudioOutputDevice"), argumentList);
    }

    inline QDBusPendingReply<> setDialpad()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setDialpad"), argumentList);
    }

    inline QDBusPendingReply<> setHookSettings(MapStringString settings)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(settings);
        return asyncCallWithArgumentList(QLatin1String("setHookSettings"), argumentList);
    }

    inline QDBusPendingReply<> setInputAudioPlugin(const QString &audioPlugin)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(audioPlugin);
        return asyncCallWithArgumentList(QLatin1String("setInputAudioPlugin"), argumentList);
    }

    inline QDBusPendingReply<> setMailNotify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setMailNotify"), argumentList);
    }

    inline QDBusPendingReply<> setMaxCalls(int calls)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(calls);
        return asyncCallWithArgumentList(QLatin1String("setMaxCalls"), argumentList);
    }

    inline QDBusPendingReply<> setNotify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setNotify"), argumentList);
    }

    inline QDBusPendingReply<> setOutputAudioPlugin(const QString &audioPlugin)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(audioPlugin);
        return asyncCallWithArgumentList(QLatin1String("setOutputAudioPlugin"), argumentList);
    }

    inline QDBusPendingReply<> setPulseAppVolumeControl()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setPulseAppVolumeControl"), argumentList);
    }

    inline QDBusPendingReply<> setRecordPath(const QString &rec)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(rec);
        return asyncCallWithArgumentList(QLatin1String("setRecordPath"), argumentList);
    }

    inline QDBusPendingReply<> setRingtoneChoice(const QString &tone)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(tone);
        return asyncCallWithArgumentList(QLatin1String("setRingtoneChoice"), argumentList);
    }

    inline QDBusPendingReply<> setSearchbar()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setSearchbar"), argumentList);
    }

    inline QDBusPendingReply<> setSipPort(int port)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(port);
        return asyncCallWithArgumentList(QLatin1String("setSipPort"), argumentList);
    }

    inline QDBusPendingReply<> setStunServer(const QString &server)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(server);
        return asyncCallWithArgumentList(QLatin1String("setStunServer"), argumentList);
    }

    inline QDBusPendingReply<> setVolumeControls()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("setVolumeControls"), argumentList);
    }

    inline QDBusPendingReply<> startHidden()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("startHidden"), argumentList);
    }

    inline QDBusPendingReply<> switchPopupMode()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("switchPopupMode"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void accountsChanged();
    void errorAlert(int code);
};

namespace org {
  namespace sflphone {
    namespace SFLphone {
      typedef ::ConfigurationManagerInterface ConfigurationManager;
    }
  }
}
#endif
